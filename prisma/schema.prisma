// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model Widget {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
}

model prodi {
  kode      String      @id @unique
  nama      String
  tendik    account[]
  PL        PL[]
  CPL       CPL[]
  BK        BK[]
  MK        MK[]
  CPMK      CPMK[]
  mahasiswa mahasiswa[]
}

model account {
  id       Int     @id @unique @default(sequence())
  nama     String
  email    String  @unique
  role     String
  password String
  kelas    kelas[] @relation("kelas_dosen")
  prodi    prodi   @relation(fields: [prodiId], references: [kode], onDelete: Cascade)
  prodiId  String
}

model PL {
  id        Int     @id @unique @default(sequence())
  kode      String
  deskripsi String
  CPL       CPL[]   @relation("cpl_pl")
  prodi     prodi?  @relation(fields: [prodiId], references: [kode], onDelete: Cascade)
  prodiId   String?

  @@unique([kode, prodiId])
}

model CPL {
  id            Int             @id @unique @default(sequence())
  kode          String
  deskripsi     String
  keterangan    String
  BK            BK[]            @relation("cpl_bk")
  PL            PL[]            @relation("cpl_pl")
  CPMK          CPMK[]          @relation("cpmk_cpl")
  penilaianCPMK penilaianCPMK[]
  prodi         prodi           @relation(fields: [prodiId], references: [kode], onDelete: Cascade)
  prodiId       String

  @@unique([kode, prodiId])
}

model BK {
  id        Int    @id @unique @default(sequence())
  kode      String
  deskripsi String
  min       Int
  max       Int
  CPL       CPL[]  @relation("cpl_bk")
  MK        MK[]   @relation("bk_mk")
  prodi     prodi  @relation(fields: [prodiId], references: [kode], onDelete: Cascade)
  prodiId   String

  @@unique([kode, prodiId])
}

model MK {
  kode                String          @id @unique
  deskripsi           String
  sks                 String
  batasLulusMahasiswa Float
  batasLulusMK        Float
  jumlahLulus         Int
  kelas               kelas[]
  BK                  BK[]            @relation("bk_mk")
  CPMK                CPMK[]          @relation("cpmk_mk")
  penilaianCPMK       penilaianCPMK[]
  prodi               prodi           @relation(fields: [prodiId], references: [kode], onDelete: Cascade)
  prodiId             String
}

model kelas {
  id             Int          @id @unique @default(sequence())
  nama           String
  MK             MK           @relation(fields: [MKId], references: [kode], onDelete: Cascade)
  MKId           String
  mahasiswa      mahasiswa[]  @relation("kelas_mahasiswa")
  nilaiMahasiswa inputNilai[]
  dosen          account[]    @relation("kelas_dosen")
  jumlahLulus    Int
  mahasiswaLulus Json?
  dataCPMK       Json?
}

model CPMK {
  id            Int             @id @unique @default(sequence())
  kode          String
  deskripsi     String
  CPL           CPL[]           @relation("cpmk_cpl")
  MK            MK[]            @relation("cpmk_mk")
  subCPMK       subCPMK[]       @relation("cpmk_subcpmk")
  penilaianCPMK penilaianCPMK[]
  prodi         prodi           @relation(fields: [prodiId], references: [kode], onDelete: Cascade)
  prodiId       String

  @@unique([kode, prodiId])
}

model subCPMK {
  kode      String @id @unique
  deskripsi String
  CPMK      CPMK[] @relation("cpmk_subcpmk")
}

model penilaianCPMK {
  kode            String       @id @unique
  CPL             CPL          @relation(fields: [CPLkode], references: [id], onDelete: Cascade)
  CPLkode         Int
  MK              MK           @relation(fields: [MKkode], references: [kode], onDelete: Cascade)
  MKkode          String
  CPMK            CPMK         @relation(fields: [CPMKkode], references: [id], onDelete: Cascade)
  CPMKkode        Int
  tahapPenilaian  String
  teknikPenilaian String
  instrumen       String
  batasNilai      Float
  kriteria        Json
  inputNilai      inputNilai[]
}

model mahasiswa {
  nim        String       @id @unique
  nama       String
  kelas      kelas[]      @relation("kelas_mahasiswa")
  inputNilai inputNilai[]
  prodi      prodi        @relation(fields: [prodiId], references: [kode], onDelete: Cascade)
  prodiId    String
}


model inputNilai {
  id              Int           @unique @default(sequence())
  penilaianCPMK   penilaianCPMK @relation(fields: [penilaianCPMKId], references: [kode], onDelete: Cascade)
  penilaianCPMKId String
  mahasiswa       mahasiswa     @relation(fields: [mahasiswaNim], references: [nim], onDelete: Cascade)
  mahasiswaNim    String
  kelas           kelas         @relation(fields: [kelasId], references: [id], onDelete: Cascade)
  kelasId         Int
  nilai           Float[]
}
